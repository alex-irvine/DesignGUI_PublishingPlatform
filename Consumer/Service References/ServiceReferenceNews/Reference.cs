//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consumer.ServiceReferenceNews {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/Services.Model")]
    [System.SerializableAttribute()]
    public partial class News : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_modifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_publishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool publishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string textField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_modified {
            get {
                return this.date_modifiedField;
            }
            set {
                if ((this.date_modifiedField.Equals(value) != true)) {
                    this.date_modifiedField = value;
                    this.RaisePropertyChanged("date_modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_published {
            get {
                return this.date_publishedField;
            }
            set {
                if ((this.date_publishedField.Equals(value) != true)) {
                    this.date_publishedField = value;
                    this.RaisePropertyChanged("date_published");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool published {
            get {
                return this.publishedField;
            }
            set {
                if ((this.publishedField.Equals(value) != true)) {
                    this.publishedField = value;
                    this.RaisePropertyChanged("published");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string text {
            get {
                return this.textField;
            }
            set {
                if ((object.ReferenceEquals(this.textField, value) != true)) {
                    this.textField = value;
                    this.RaisePropertyChanged("text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceNews.INewsService")]
    public interface INewsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/INewsService/GetDataUsingDataContractResponse")]
        Consumer.ServiceReferenceNews.CompositeType GetDataUsingDataContract(Consumer.ServiceReferenceNews.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/INewsService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Consumer.ServiceReferenceNews.CompositeType> GetDataUsingDataContractAsync(Consumer.ServiceReferenceNews.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNews", ReplyAction="http://tempuri.org/INewsService/GetNewsResponse")]
        System.Collections.Generic.List<Consumer.ServiceReferenceNews.News> GetNews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNews", ReplyAction="http://tempuri.org/INewsService/GetNewsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Consumer.ServiceReferenceNews.News>> GetNewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsById", ReplyAction="http://tempuri.org/INewsService/GetNewsByIdResponse")]
        Consumer.ServiceReferenceNews.News GetNewsById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsById", ReplyAction="http://tempuri.org/INewsService/GetNewsByIdResponse")]
        System.Threading.Tasks.Task<Consumer.ServiceReferenceNews.News> GetNewsByIdAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsServiceChannel : Consumer.ServiceReferenceNews.INewsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsServiceClient : System.ServiceModel.ClientBase<Consumer.ServiceReferenceNews.INewsService>, Consumer.ServiceReferenceNews.INewsService {
        
        public NewsServiceClient() {
        }
        
        public NewsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Consumer.ServiceReferenceNews.CompositeType GetDataUsingDataContract(Consumer.ServiceReferenceNews.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Consumer.ServiceReferenceNews.CompositeType> GetDataUsingDataContractAsync(Consumer.ServiceReferenceNews.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public System.Collections.Generic.List<Consumer.ServiceReferenceNews.News> GetNews() {
            return base.Channel.GetNews();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Consumer.ServiceReferenceNews.News>> GetNewsAsync() {
            return base.Channel.GetNewsAsync();
        }
        
        public Consumer.ServiceReferenceNews.News GetNewsById(string id) {
            return base.Channel.GetNewsById(id);
        }
        
        public System.Threading.Tasks.Task<Consumer.ServiceReferenceNews.News> GetNewsByIdAsync(string id) {
            return base.Channel.GetNewsByIdAsync(id);
        }
    }
}
